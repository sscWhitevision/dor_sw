<?php
/**
 * Created by PhpStorm.
 * User: jens
 * Date: 14.12.15
 * Time: 14:28
 */

require_once (dirname(dirname(dirname(dirname(dirname(__FILE__)))))) . '/config.core.php';
require_once MODX_CORE_PATH.'model/modx/modx.class.php';
$modx = new modX();
$modx->initialize('web');

$modx->log(modX::LOG_LEVEL_DEBUG, '[Updater Cron] refresh called at '.date( 'Ymd H:i:s', time() ));

if (!$modx->loadClass('Updater', MODX_CORE_PATH . 'components/updater/model/', true, true)) {
    $modx->log(modX::LOG_LEVEL_ERROR, '[Updater] Could not load Updater class.');
    exit;
}

/* we want to force an update */
$old_package_expire = $modx->getOption('auto_check_pkg_updates_cache_expire',null,86400);
$modx->setOption('auto_check_pkg_updates_cache_expire','0');

/* refresh everything */
$updater = new Updater($modx, array());
$updater->refreshCoreVersion();
$updater->refreshCoreDownload();
$updater->refreshPackageData();

/* restore settings */
$modx->setOption('auto_check_pkg_updates_cache_expire',$old_package_expire);

/*
    Check if we already defined an event for that. If not,
    we are going to do that here (but it should have already been done
    during installation!)
 */
$events = $modx->getObject('modEvent',array('name'=>'OnUpdaterCron'));
if (is_null($events)) {
    $events = $modx->newObject('modEvent');
    $events->fromArray(array(
        'name' => 'OnUpdaterCron',
        'service' => 6,
        'groupname' => 'Updater',
    ), '', true, true);
    $events->save();
}
$modx->invokeEvent('OnUpdaterCron', array());
exit;